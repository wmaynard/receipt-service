image: alpine:latest

variables:
  # KUBE_INGRESS_BASE_DOMAIN is the application deployment domain and should be set as a variable at the group or project level.
  KUBE_INGRESS_BASE_DOMAIN: nonprod.tower.cdrentertainment.com
  POSTGRES_ENABLED: "false"
  HELM_SCALE_EXTRA_ARGS: --set postgresql.enabled="false" 
  K8S_SECRET_XMS: "$XMX"
  K8S_SECRET_XMX: "$XMX"
  K8S_SECRET_MAXPERM: "$MAXPERM"
  K8S_SECRET_RUMBLE_CONFIG_SERVICE_URL: "$RUMBLE_CONFIG_SERVICE_URL"
  K8S_SECRET_RUMBLE_COMPONENT: "$RUMBLE_COMPONENT"
  K8S_SECRET_RUMBLE_DEPLOYMENT: "$RUMBLE_DEPLOYMENT"
  K8S_SECRET_LOGGLY_URL: "$LOGGLY_URL"
  K8S_SECRET_GRAPHITE: "$GRAPHITE"
  K8S_SECRET_GOOGLE_APP_ID: "$GOOGLE_APP_ID"
  K8S_SECRET_GOOGLE_CLIENT_ID: "$GOOGLE_APP_ID"
  K8S_SECRET_GOOGLE_VALIDATE_TOKEN_URL: "$GOOGLE_VALIDATE_TOKEN_URL"
  K8S_SECRET_REDIS_KEY_PREFIX: "$RUMBLE_COMPONENT-$RUMBLE_DEPLOYMENT"
  K8S_SECRET_REDIS_HOST: "$REDIS_HOST"
  K8S_SECRET_REDIS_PORT: "$REDIS_PORT"
  # from gitlab project ci variables
  K8S_SECRET_REDIS_PASSWORD: "$REDIS_PASSWORD"
  K8S_SECRET_RUMBLE_KEY: "$RUMBLE_KEY"
  K8S_SECRET_RUMBLE_TOKEN_VALIDATION: "$RUMBLE_TOKEN_VALIDATION"
  K8S_SECRET_RUMBLE_TOKEN_VERIFICATION: "$RUMBLE_TOKEN_VERIFICATION"
  K8S_SECRET_GOOGLE_APP_SECRET: "$GOOGLE_APP_SECRET"
  K8S_SECRET_MONGODB_NAME: "$MONGODB_NAME"
  K8S_SECRET_MONGODB_URI: "$MONGODB_URI"
  K8S_SECRET_androidStoreKey: "$androidStoreKey"
  K8S_SECRET_iosVerifyReceiptSandbox: "$iosVerifyReceiptSandbox"
  K8S_SECRET_iosVerifyReceiptUrl: "$iosVerifyReceiptUrl"


  DOCKER_DRIVER: overlay2
  DEPLOY_TYPE: "kubernetes" # "kubernetes"

  ROLLOUT_RESOURCE_TYPE: deployment

  DOCKER_TLS_CERTDIR: ""  # https://gitlab.com/gitlab-org/gitlab-runner/issues/4501

stages:
  - app_build
  - build
  - scan
  - deploy  # dummy stage to follow the template guidelines
  - dev
  - staging
  - production
  - performance
  - cleanup

build_app:
  stage: app_build
  image: mcr.microsoft.com/dotnet/sdk:6.0
  allow_failure: false
  tags:
    - kubernetes
  script:
    - dotnet nuget add source --username $BOT_USER --password $BOT_PAT --store-password-in-clear-text --name platform "$CI_SERVER_URL/api/v4/groups/5/-/packages/nuget/index.json"
    - dotnet nuget add source --username $BOT_USER --password $BOT_PAT --store-password-in-clear-text --name tower "$CI_SERVER_URL/api/v4/groups/6/-/packages/nuget/index.json"
    - dotnet nuget add source --username $BOT_USER --password $BOT_PAT --store-password-in-clear-text --name github "https://gitlab.cdrentertainment.com/api/v4/projects/14/packages/nuget/index.json"
    - dotnet restore
    - dotnet build --no-restore --configuration Release
  artifacts:
    paths:
      - bin/Release/net6.0/*
  rules:
    - if: $CI_COMMIT_TAG
      when: never
    - when: always

build_image:
  stage: build
  allow_failure: false
  image:
    name: gcr.io/kaniko-project/executor:debug
    entrypoint: [""]
  script:
    - mkdir -p /kaniko/.docker
    - mkdir -p $CI_PROJECT_DIR/trivy
    - mkdir -p $CI_PROJECT_DIR/.trivycache
    - echo "{\"auths\":{\"$CI_REGISTRY\":{\"auth\":\"$(echo -n ${CI_REGISTRY_USER}:${CI_REGISTRY_PASSWORD} | base64)\"}}}" > /kaniko/.docker/config.json
    - /kaniko/executor --context $CI_PROJECT_DIR --dockerfile $CI_PROJECT_DIR/Dockerfile --destination $CI_REGISTRY_IMAGE/$CI_COMMIT_REF_SLUG:$CI_COMMIT_SHA
  rules:
      - when: on_success
  needs:
    - job: build_app
      artifacts: true

include: 
  - '/.gitlab/deploy-k8s.yaml'
